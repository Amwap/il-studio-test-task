version: '3.8'

services:
  postgres:
    container_name: chat_postgres_dev
    image: postgres:14
    volumes:
      - postgres_data:/var/lib/postgresql/chat_dev_data/
    env_file:
      - ./.env.dev
    networks:
      - chat-network

  django_app:
    container_name: chat_django_dev
    build: 
      context: ./django_app
      dockerfile: Dockerfile.dev
    command: sh -c "
          python manage.py collectstatic --noinput
          && python manage.py makemigrations --noinput
          && python manage.py migrate --noinput
          && python manage.py createadmin
          && python manage.py runserver 0.0.0.0:8000
          || true
        "
    volumes:
      - ./django_app/:/home/django_app/
    ports:
      - 8004:8000
    expose:
      - 8000
    env_file:
      - ./.env.dev
    depends_on:
      - postgres
    networks:
      - chat-network
    extra_hosts:
      - "host.docker.internal:host-gateway"

  # react_app:
  #   build:
  #     context: ./react_app
  #     dockerfile: Dockerfile.dev
  #   container_name: chat_react_dev
  #   command: sh -c "printenv | grep REACT_APP_ > .env && npm start"
  #   env_file:
  #     - ./.env.dev
  #   # volumes:

  #   ports:
  #     - 3000:3000
  #   expose:
  #     - 3000
  #   depends_on:
  #     - django_app
  #   restart: always
  #   tty: true
  #   networks:
  #     - chat-network

volumes:
  postgres_data:
  node_modules:

networks:
  chat-network:
    driver: bridge

